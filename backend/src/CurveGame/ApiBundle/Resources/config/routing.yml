curve_game_api_root:
    path: /

# Used for letting the user registering a username for the game.
curve_game_api_user_register:
    path: /user/register
    defaults:
        _controller: CurveGameApiBundle:User:register
    methods: POST

# Deletes the user from our records.
curve_game_api_user_delete:
    path: /user/delete/profile
    defaults:
      _controller: CurveGameApiBundle:User:delete
    methods: [POST,DELETE]

# Used for Unity to fetch all necessary user data.
curve_game_api_unity_userdata:
    path: /unity/userdata
    defaults:
        _controller: CurveGameApiBundle:Unity:userData
    methods: GET

# Unity will send the scores to this route.
curve_game_api_unity_scores:
    path: /unity/scores
    defaults:
        _controller: CurveGameApiBundle:Unity:scores
    methods: POST

# Will send the play command to python scripts (socket to unity client).
curve_game_api_unity_command:
    path: /unity/command
    defaults:
        _controller: CurveGameApiBundle:Unity:command
    methods: POST

# Client will poll every x seconds whether he's on turn or not.
curve_game_api_queue_poll:
    path: /queue/poll
    defaults:
        _controller: CurveGameApiBundle:Queue:poll
    methods: POST

# Receives the definite confirmation of the user that he is ready to play.
curve_game_api_queue_confirmReady:
    path: /queue/confirm/ready
    defaults:
        _controller: CurveGameApiBundle:Queue:confirmReady
    methods: POST

# Is used to show the user at which position he currently is in the queue.
curve_game_api_queue_position:
    path: /queue/position
    defaults:
        _controller: CurveGameApiBundle:Queue:position
    methods: POST

curve_game_api_queue_heartbeat_finished:
    path: /queue/heartbeat/{userHash}
    defaults:
        _controller: CurveGameApiBundle:Queue:heartbeat
    methods: GET